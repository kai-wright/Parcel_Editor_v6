{"mappings":"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","sources":["<anon>","src/TS/index.ts","src/TS/properties.ts","src/TS/editor.ts","src/TS/type.ts","src/TS/parcels.ts","src/TS/util.ts"],"sourcesContent":["class $46210b831001efd1$export$92473e6020ad89b4 {\n    validate() {\n        let report = [];\n        if (this.result.length === 0) report.push([\n            \"warning\",\n            \"Interaction is missing a result.\"\n        ]);\n        if (this.require.length === 0 && this.consume.length === 0) report.push([\n            \"warning\",\n            \"Interaction is missing a requirement or consumption.\"\n        ]);\n        return report;\n    }\n    validateProperty(property, validIds) {\n        let report = [];\n        if (property == \"result\") {\n            if (this.result.length === 0) report.push([\n                \"warning\",\n                \"Interaction is missing a result.\"\n            ]);\n        } else if (this.require.length === 0 && this.consume.length === 0) report.push([\n            \"warning\",\n            \"Interaction is missing a requirement or consumption.\"\n        ]);\n        report = [\n            ...report,\n            ...this.validateSubproperties(validIds)\n        ];\n        // console.table(report);\n        return report;\n    }\n    validateSubproperties(validIds) {\n        let report = [];\n        let properties = [\n            \"result\",\n            \"require\",\n            \"consume\"\n        ];\n        for (const property of properties){\n            // if any of the ids are not valid, report an error\n            for(const i in this[property])if (!validIds.includes(this[property][i][0])) report.push([\n                \"warning\",\n                \"Invalid \" + property + \" ID: \" + this[property][i][0]\n            ]);\n            // if any of the ids are 0 give invalid, if less than 0 give warning\n            for(const i in this[property]){\n                if (this[property][i][1] <= 0) report.push([\n                    \"invalid\",\n                    \"Invalid \" + property + \" quantity: \" + this[property][i][1]\n                ]);\n                else if (this[property][i][1] < 0) report.push([\n                    \"warning\",\n                    \"Invalid \" + property + \" quantity: \" + this[property][i][1]\n                ]);\n            }\n        }\n        return report;\n    }\n    constructor(){\n        this.unlocked = false;\n        this.result = [];\n        this.require = [];\n        this.consume = [];\n    }\n}\nclass $46210b831001efd1$export$5c821c4fb743fae8 {\n    constructor(){\n        this.unlocked = false;\n        this.count = 0;\n        this.effect_add = 0;\n        this.effect_multiply = 0;\n        this.require = [];\n        this.consume = [];\n    }\n}\n\n\n// ? Resource, Structure, Research, or Unique\nconst $61ac6999b06bcc6b$export$953fd2ca369933c7 = new RegExp(\"^[a-z]([a-z_]*[a-z])?$\");\nconst $61ac6999b06bcc6b$export$4820a57701200e97 = new RegExp(\"^[a-zA-Z](?:[a-zA-Z ]*[a-zA-Z])?$\");\nconst $61ac6999b06bcc6b$export$8061f4f56cedd9bb = new RegExp(`^(resource|structure|research|unique)\\:(([a-z]([a-z_]*[a-z])?))$`);\n\n\n\n// ? The base abstract parcel class\n// save() loads all properties into localStorage\n// load(full id) tries to load the provided id into itself\n// validate_parcel() checks that all properties of the abstract parcel class are valid\nclass $732d296f0054a2bc$var$parcel {\n    constructor(id, type, name){\n        this.id = id;\n        this.type = type;\n        this.name = name;\n        this.unlocked = false;\n        this.interactions = [];\n    }\n    validate_parcel() {\n        let report = [];\n        if (!(0, $61ac6999b06bcc6b$export$953fd2ca369933c7).test(this.id)) report.push([\n            \"invalid\",\n            \"ID is invalid.\"\n        ]);\n        if (!(0, $61ac6999b06bcc6b$export$4820a57701200e97).test(this.name)) report.push([\n            \"warning\",\n            \"Name is invalid.\"\n        ]);\n        report = [\n            ...report,\n            ...this.validate_self()\n        ];\n        for(const i in this.interactions)report = [\n            ...report,\n            ...this.validate_interaction[this.interactions[i]]\n        ];\n        return report;\n    }\n    validate_interaction(target) {\n        let report = [];\n        console.log(target);\n        for(const i in this[target]){\n            const result = this[target][i].validate();\n            report = [\n                ...report,\n                ...result\n            ];\n        }\n        return report;\n    }\n}\nclass $732d296f0054a2bc$export$e9d70138bf24ca18 extends $732d296f0054a2bc$var$parcel {\n    constructor(id, name){\n        super(id, \"resource\", name);\n        this.id = id;\n        this.name = name;\n        this.type = \"resource\";\n        this.owned = 0;\n        this.interactions = [\n            \"interaction_buy\",\n            \"interaction_sell\",\n            \"interaction_craft\",\n            \"interaction_generate\"\n        ];\n        this.interaction_buy = [];\n        this.interaction_sell = [];\n        this.interaction_craft = [];\n        this.interaction_generate = [];\n    }\n    validate_self() {\n        let report = [];\n        report.push($732d296f0054a2bc$var$validate_not_negative(this.owned, \"Owned\"));\n        if (this.interaction_buy.length === 0 && this.interaction_craft.length === 0 && this.interaction_generate.length === 0) report.push([\n            \"warning\",\n            \"Interaction is missing a aquisition interaction.\"\n        ]);\n        for(let i = 0; i < this.interaction_buy.length; i++)report = [\n            ...report,\n            ...this.interaction_buy[i].validate()\n        ];\n        for(let i = 0; i < this.interaction_sell.length; i++)report = [\n            ...report,\n            ...this.interaction_sell[i].validate()\n        ];\n        for(let i = 0; i < this.interaction_craft.length; i++)report = [\n            ...report,\n            ...this.interaction_craft[i].validate()\n        ];\n        for(let i = 0; i < this.interaction_generate.length; i++)report = [\n            ...report,\n            ...this.interaction_generate[i].validate()\n        ];\n        return report;\n    }\n}\nclass $732d296f0054a2bc$export$939564c233e4e371 extends $732d296f0054a2bc$var$parcel {\n    constructor(id, name){\n        super(id, \"structure\", name);\n        this.id = id;\n        this.name = name;\n        this.type = \"structure\";\n        this.owned = 0;\n        this.interactions = [\n            \"interaction_buy\",\n            \"interaction_sell\",\n            \"interaction_craft\",\n            \"interaction_generate\"\n        ];\n        this.interaction_buy = [];\n        this.interaction_sell = [];\n        this.interaction_craft = [];\n        this.interaction_generate = [];\n    }\n    validate_self() {\n        let report = [];\n        report.push($732d296f0054a2bc$var$validate_not_negative(this.owned, \"Owned\"));\n        return report;\n    }\n}\nclass $732d296f0054a2bc$export$f1a40d7dd1596669 extends $732d296f0054a2bc$var$parcel {\n    constructor(id, name){\n        super(id, \"research\", name);\n        this.id = id;\n        this.name = name;\n        this.type = \"research\";\n        this.interactions = [\n            \"interaction_craft\"\n        ];\n        this.interaction_craft = [];\n    }\n    validate_self() {\n        if (this.interaction_craft.length === 0) return [\n            [\n                \"warning\",\n                \"Interaction is missing a craft interaction.\"\n            ]\n        ];\n        return [];\n    }\n}\nclass $732d296f0054a2bc$export$2ab3c62fbe8d8bb extends $732d296f0054a2bc$var$parcel {\n    constructor(id, name){\n        super(id, \"unique\", name);\n        this.id = id;\n        this.name = name;\n        this.type = \"unique\";\n        this.owned = 0;\n    }\n    validate_self() {\n        return [];\n    }\n}\nfunction $732d296f0054a2bc$var$validate_not_negative(property, property_name) {\n    if (property < 0) return [\n        \"invalid\",\n        `${property_name} is negative or undefined.`\n    ];\n    return [\n        \"valid\",\n        `${property_name} is equal to or greater than zero.`\n    ];\n}\n\n\n\nfunction $7c97e1adeaf198e6$var$id_to_name(id) {\n    let name = id.replaceAll(\"_\", \" \");\n    name = $7c97e1adeaf198e6$var$capitalise_all_words(name);\n    return name;\n}\nfunction $7c97e1adeaf198e6$var$capitalise_all_words(source) {\n    return source.replace(/\\w\\S*/g, function(txt) {\n        return txt.charAt(0).toUpperCase() + txt.substring(1).toLowerCase();\n    });\n}\nfunction $7c97e1adeaf198e6$var$capitalise_first_word(source) {\n    return source.charAt(0).toUpperCase() + source.slice(1);\n}\nfunction $7c97e1adeaf198e6$var$removeSymbols(source) {\n    // Replace underscores _ and dashes with spaces\n    // replace all other characters with blank\n    return source.replaceAll(\"_\", \" \").replaceAll(\"-\", \" \").replaceAll(/[^a-zA-Z0-9\\s]/g, \"\");\n}\nfunction $7c97e1adeaf198e6$var$validity_check(reports) {\n    let state = \"valid\";\n    for(const i in reports){\n        const report_state = reports[i][0];\n        if (report_state == \"valid\") continue;\n        else if (report_state == \"invalid\") state = \"invalid\";\n        else if (report_state == \"warning\") return \"warning\";\n    }\n    return state;\n}\nvar $7c97e1adeaf198e6$export$2e2bcd8739ae039 = {\n    id_to_name: $7c97e1adeaf198e6$var$id_to_name,\n    capitalise_all_words: $7c97e1adeaf198e6$var$capitalise_all_words,\n    capitalise_first_word: $7c97e1adeaf198e6$var$capitalise_first_word,\n    validity_check: $7c97e1adeaf198e6$var$validity_check,\n    removeSymbols: $7c97e1adeaf198e6$var$removeSymbols\n};\n\n\nconst $cccf7d3b46d90071$var$DOM_PARCEL_LIST = document.getElementById(\"parcel_list\");\nconst $cccf7d3b46d90071$var$DOM_PARCEL_EDIT = document.getElementById(\"parcel_edit\");\nconst $cccf7d3b46d90071$var$DOM_INTERACTION_LIST = document.getElementById(\"parcel_interaction_list\");\nconst $cccf7d3b46d90071$var$DOM_INTERACTION_EDIT = document.getElementById(\"parcel_interaction_edit\");\nconst $cccf7d3b46d90071$var$DOM_INTERACTION_SET = document.getElementById(\"parcel_interaction_set\");\nconst $cccf7d3b46d90071$var$DOM_PARCEL_ADD_TYPE = document.getElementById(\"parcel_add_type\");\nconst $cccf7d3b46d90071$var$DOM_PARCEL_ADD_ID = document.getElementById(\"parcel_add_id\");\nconst $cccf7d3b46d90071$var$DOM_PARCEL_ADD_BUTTON = document.getElementById(\"parcel_add_button\");\nfunction $cccf7d3b46d90071$var$checkParcelAddIDEmpty() {\n    // If empty add .empty class\n    if ($cccf7d3b46d90071$var$DOM_PARCEL_ADD_ID.value === \"\") $cccf7d3b46d90071$var$DOM_PARCEL_ADD_ID.classList.add(\"empty\");\n    else $cccf7d3b46d90071$var$DOM_PARCEL_ADD_ID.classList.remove(\"empty\");\n}\n$cccf7d3b46d90071$var$DOM_PARCEL_ADD_ID.addEventListener(\"input\", $cccf7d3b46d90071$var$checkParcelAddIDEmpty);\n$cccf7d3b46d90071$var$checkParcelAddIDEmpty();\nconst $cccf7d3b46d90071$var$PROPERTY_IDREGEX = \"[a-z]([a-z_]*[a-z])?\";\nconst $cccf7d3b46d90071$var$PROPERTY_NAMEREGEX = \"[a-zA-Z](?:[a-zA-Z ]*[a-zA-Z])?\";\nclass $cccf7d3b46d90071$export$b5d042d2b680aed6 {\n    constructor(default_start = true){\n        this.version = \"Parcel Editor - 6.0.0\";\n        this.stored_parcel = [];\n        // Init\n        if (default_start) {\n            this.logVersion();\n            this.checkStorage();\n            // this.renderList();\n            this.clear();\n            console.log(\"Editor Ready!\");\n            this.renderEditor();\n        } else console.warn(\"Editor started in uninitialised state.\\n Did you want to do this?\");\n        $cccf7d3b46d90071$var$DOM_PARCEL_ADD_BUTTON.addEventListener(\"click\", ()=>{\n            this.new_parcel();\n            this.refreshList();\n        });\n    }\n    logVersion() {\n        console.log(this.version);\n    }\n    save() {\n        if (this.parcel.id === \"\") console.warn(\"Blank ID given to save process. Not saving\");\n        else if ((0, $61ac6999b06bcc6b$export$953fd2ca369933c7).test(this.parcel.id)) {\n            localStorage.setItem(`${this.parcel.type}:${this.parcel.id}`, JSON.stringify(this.parcel));\n            console.log(`Saved ${this.parcel.type}:${this.parcel.id} to localStorage`);\n        } else console.error(`ID '${this.parcel.id}' is invalid. Failed to save data.`);\n    }\n    load(full_id) {\n        let data;\n        if (data = localStorage.getItem(full_id)) {\n            const parsed_data = JSON.parse(data);\n            // Clear parcel\n            this.parcel = null;\n            // Assign to parcel\n            this.parcel = parsed_data;\n            // Set this parcels class to be of the correct class type\n            switch(this.parcel.type){\n                case \"resource\":\n                    this.parcel = new (0, $732d296f0054a2bc$export$e9d70138bf24ca18)(this.parcel.id, this.parcel.name);\n                    this.parcel.owned = parsed_data.owned || 0;\n                    this.parcel.unlocked = parsed_data.unlocked || false;\n                    this.parcel.interaction_buy = parsed_data.interaction_buy || [];\n                    this.parcel.interaction_sell = parsed_data.interaction_sell || [];\n                    this.parcel.interaction_craft = parsed_data.interaction_craft || [];\n                    this.parcel.interaction_generate = parsed_data.interaction_generate || [];\n                    break;\n                case \"structure\":\n                    this.parcel = new (0, $732d296f0054a2bc$export$939564c233e4e371)(this.parcel.id, this.parcel.name);\n                    this.parcel.owned = parsed_data.owned || 0;\n                    this.parcel.unlocked = parsed_data.unlocked || false;\n                    this.parcel.interaction_buy = parsed_data.interaction_buy || [];\n                    this.parcel.interaction_sell = parsed_data.interaction_sell || [];\n                    this.parcel.interaction_craft = parsed_data.interaction_craft || [];\n                    this.parcel.interaction_generate = parsed_data.interaction_generate || [];\n                    this.parcel.interaction_requirement = parsed_data.interaction_requirement || [];\n                    break;\n                case \"research\":\n                    this.parcel = new (0, $732d296f0054a2bc$export$f1a40d7dd1596669)(this.parcel.id, this.parcel.name);\n                    this.parcel.unlocked = parsed_data.unlocked || false;\n                    this.parcel.interaction_craft = parsed_data.interaction_craft || [];\n                    break;\n                case \"unique\":\n                    this.parcel = new (0, $732d296f0054a2bc$export$2ab3c62fbe8d8bb)(this.parcel.id, this.parcel.name);\n                    this.parcel.unlocked = parsed_data.unlocked || false;\n                    break;\n            }\n            // If the parcel contains any interactions, assign each of them to the class interaction without overwriting\n            let interaction_types = [\n                \"interaction_buy\",\n                \"interaction_sell\",\n                \"interaction_craft\",\n                \"interaction_generate\"\n            ];\n            for(let i = 0; i < interaction_types.length; i++){\n                let type = interaction_types[i];\n                if (this.parcel[type]) for(let j = 0; j < this.parcel[type].length; j++){\n                    // Convert to class\n                    let new_interaction = new (0, $46210b831001efd1$export$92473e6020ad89b4)();\n                    // Add data\n                    new_interaction.result = this.parcel[type][j].result;\n                    new_interaction.consume = this.parcel[type][j].consume;\n                    new_interaction.require = this.parcel[type][j].require;\n                    new_interaction.unlocked = this.parcel[type][j].unlocked;\n                    // Assign\n                    this.parcel[type][j] = new_interaction;\n                }\n            }\n            console.info(`Loaded ${parsed_data.type}:${parsed_data.id}`);\n        } else console.error(`${full_id} does not exist. Failed to load data.`);\n    }\n    new_parcel() {\n        const new_type = $cccf7d3b46d90071$var$DOM_PARCEL_ADD_TYPE.value;\n        const id = $cccf7d3b46d90071$var$DOM_PARCEL_ADD_ID.value;\n        if (!(0, $61ac6999b06bcc6b$export$953fd2ca369933c7).test(id)) {\n            console.error(`${id} is not a valid ID, unable to create`);\n            return;\n        }\n        this.save();\n        const name = (0, $7c97e1adeaf198e6$export$2e2bcd8739ae039).capitalise_all_words((0, $7c97e1adeaf198e6$export$2e2bcd8739ae039).removeSymbols(id));\n        switch(new_type){\n            case \"resource\":\n                this.parcel = new (0, $732d296f0054a2bc$export$e9d70138bf24ca18)(id, name);\n                break;\n            case \"structure\":\n                this.parcel = new (0, $732d296f0054a2bc$export$939564c233e4e371)(id, name);\n                break;\n            case \"research\":\n                this.parcel = new (0, $732d296f0054a2bc$export$f1a40d7dd1596669)(id, name);\n                break;\n            case \"unique\":\n                this.parcel = new (0, $732d296f0054a2bc$export$2ab3c62fbe8d8bb)(id, name);\n                break;\n        }\n        this.save();\n    }\n    delete(full_id) {\n        if (localStorage.getItem(full_id)) {\n            localStorage.removeItem(full_id);\n            console.info(`Deleted ${full_id}`);\n        } else console.error(`${full_id} does not exist. Failed to delete data.`);\n        // If the current parcel is deleted, clear it\n        if (full_id == `${this.parcel.type}:${this.parcel.id}`) this.clear();\n        this.refreshList();\n    }\n    clear(type = \"resource\", id = \"\") {\n        if (type == \"resource\") this.parcel = new (0, $732d296f0054a2bc$export$e9d70138bf24ca18)(id, (0, $7c97e1adeaf198e6$export$2e2bcd8739ae039).id_to_name(id));\n        else if (type == \"structure\") this.parcel = new (0, $732d296f0054a2bc$export$939564c233e4e371)(id, (0, $7c97e1adeaf198e6$export$2e2bcd8739ae039).id_to_name(id));\n        else if (type == \"research\") this.parcel = new (0, $732d296f0054a2bc$export$f1a40d7dd1596669)(id, (0, $7c97e1adeaf198e6$export$2e2bcd8739ae039).id_to_name(id));\n        else if (type == \"unique\") this.parcel = new (0, $732d296f0054a2bc$export$2ab3c62fbe8d8bb)(id, (0, $7c97e1adeaf198e6$export$2e2bcd8739ae039).id_to_name(id));\n        else console.error(`Invalid type '${type}' passed to clear()`);\n    }\n    checkStorage() {\n        this.stored_parcel = [];\n        for(let i = 0; i < localStorage.length; i++){\n            if (!(0, $61ac6999b06bcc6b$export$8061f4f56cedd9bb).test(localStorage.key(i))) continue;\n            const valid_id = localStorage.key(i);\n            this.stored_parcel.push(valid_id);\n        }\n        this.stored_parcel.sort((a, b)=>a.localeCompare(b));\n        console.table(this.stored_parcel);\n    }\n    refreshList() {\n        this.checkStorage();\n        this.renderList();\n    }\n    clearDOM() {\n        $cccf7d3b46d90071$var$DOM_PARCEL_LIST.innerHTML = \"\";\n        $cccf7d3b46d90071$var$DOM_PARCEL_EDIT.innerHTML = \"\";\n        $cccf7d3b46d90071$var$DOM_INTERACTION_LIST.innerHTML = \"\";\n        $cccf7d3b46d90071$var$DOM_INTERACTION_EDIT.innerHTML = \"\";\n        $cccf7d3b46d90071$var$DOM_INTERACTION_SET.innerHTML = \"\";\n    }\n    renderList() {\n        this.clearDOM();\n        // Render list\n        if (this.stored_parcel.length === 0) {\n            console.warn(\"No parcels found\");\n            return;\n        }\n        console.log(\"Rendering list of parcels\");\n        let lastParcelType = \"\";\n        for(const i in this.stored_parcel){\n            if (lastParcelType != this.stored_parcel[i].split(\":\")[0]) {\n                const h3 = document.createElement(\"h3\");\n                h3.innerHTML = (0, $7c97e1adeaf198e6$export$2e2bcd8739ae039).capitalise_first_word(this.stored_parcel[i].split(\":\")[0]);\n                $cccf7d3b46d90071$var$DOM_PARCEL_LIST.appendChild(h3);\n                lastParcelType = this.stored_parcel[i].split(\":\")[0];\n            }\n            const button = document.createElement(\"button\");\n            button.innerHTML = this.stored_parcel[i];\n            button.addEventListener(\"click\", ()=>{\n                this.clearDOM();\n                this.load(this.stored_parcel[i]);\n                this.renderEditor();\n            });\n            $cccf7d3b46d90071$var$DOM_PARCEL_LIST.appendChild(button);\n        }\n    }\n    renderEditor() {\n        this.clearDOM();\n        this.renderList();\n        if (this.parcel === undefined) {\n            console.warn(\"No parcel loaded. Failed to render editor.\");\n            return;\n        }\n        // Render id and name inputs with validation\n        const id_input = document.createElement(\"input\");\n        id_input.type = \"text\";\n        id_input.value = this.parcel.id;\n        id_input.placeholder = \"ID\";\n        id_input.pattern = $cccf7d3b46d90071$var$PROPERTY_IDREGEX;\n        id_input.addEventListener(\"change\", ()=>{\n            if (!(0, $61ac6999b06bcc6b$export$953fd2ca369933c7).test(id_input.value)) return;\n            this.parcel.id = id_input.value;\n        });\n        $cccf7d3b46d90071$var$DOM_PARCEL_EDIT.appendChild(id_input);\n        const name_input = document.createElement(\"input\");\n        name_input.type = \"text\";\n        name_input.value = this.parcel.name;\n        name_input.placeholder = \"Name\";\n        name_input.pattern = $cccf7d3b46d90071$var$PROPERTY_NAMEREGEX;\n        name_input.addEventListener(\"change\", ()=>{\n            if (!(0, $61ac6999b06bcc6b$export$4820a57701200e97).test(name_input.value)) return;\n            this.parcel.name = name_input.value;\n        });\n        $cccf7d3b46d90071$var$DOM_PARCEL_EDIT.appendChild(name_input);\n        if (this.parcel.type == \"resource\" || this.parcel.type == \"structure\" || this.parcel.type == \"unique\") {\n            // Render owned\n            const owned_input = document.createElement(\"input\");\n            owned_input.type = \"number\";\n            owned_input.value = this.parcel.owned.toString() || \"0\";\n            owned_input.placeholder = \"Owned\";\n            owned_input.min = \"0\";\n            owned_input.addEventListener(\"change\", ()=>{\n                this.parcel.owned = Number(owned_input.value);\n            });\n            $cccf7d3b46d90071$var$DOM_PARCEL_EDIT.appendChild(owned_input);\n        }\n        // Render unlocked (boolean checkbox)\n        const checkbox_wrapper = document.createElement(\"div\");\n        const unlocked_checkbox = document.createElement(\"input\");\n        const checkbox_label = document.createElement(\"label\");\n        checkbox_label.innerHTML = \"Unlocked\";\n        unlocked_checkbox.type = \"checkbox\";\n        unlocked_checkbox.checked = this.parcel.unlocked;\n        unlocked_checkbox.addEventListener(\"change\", ()=>{\n            this.parcel.unlocked = Boolean(unlocked_checkbox.checked);\n        });\n        checkbox_wrapper.appendChild(checkbox_label);\n        checkbox_wrapper.appendChild(unlocked_checkbox);\n        $cccf7d3b46d90071$var$DOM_PARCEL_EDIT.appendChild(checkbox_wrapper);\n        // Render interactions if type is suitable\n        // Resource has buy,sell,craft,generate\n        // Structure has buy,sell,craft + charges\n        // Research has craft\n        // Unique has nothing\n        if (this.parcel.type == \"resource\" || this.parcel.type == \"structure\") {\n            // Render buy,sell buttons that trigger renderInteractionList\n            const buy_button = document.createElement(\"button\");\n            buy_button.innerHTML = \"Buy\";\n            if (this.parcel.interaction_buy && this.parcel.interaction_buy.length > 0) buy_button.innerHTML += ` (${this.parcel.interaction_buy.length})`;\n            buy_button.addEventListener(\"click\", ()=>{\n                this.renderInteractionList(\"interaction_buy\");\n            });\n            const sell_button = document.createElement(\"button\");\n            sell_button.innerHTML = \"Sell\";\n            if (this.parcel.interaction_sell && this.parcel.interaction_sell.length > 0) sell_button.innerHTML += ` (${this.parcel.interaction_sell.length})`;\n            sell_button.addEventListener(\"click\", ()=>{\n                this.renderInteractionList(\"interaction_sell\");\n            });\n            $cccf7d3b46d90071$var$DOM_PARCEL_EDIT.appendChild(buy_button);\n            $cccf7d3b46d90071$var$DOM_PARCEL_EDIT.appendChild(sell_button);\n        }\n        if (this.parcel.type == \"resource\" || this.parcel.type == \"structure\" || this.parcel.type == \"research\") {\n            // Render craft buttons that trigger renderInteractionList\n            const craft_button = document.createElement(\"button\");\n            craft_button.innerHTML = \"Craft\";\n            if (this.parcel.interaction_craft && this.parcel.interaction_craft.length > 0) craft_button.innerHTML += ` (${this.parcel.interaction_craft.length})`;\n            craft_button.addEventListener(\"click\", ()=>{\n                this.renderInteractionList(\"interaction_craft\");\n            });\n            $cccf7d3b46d90071$var$DOM_PARCEL_EDIT.appendChild(craft_button);\n        }\n        if (this.parcel.type == \"resource\") {\n            // Render generate buttons that trigger renderInteractionList\n            const generate_button = document.createElement(\"button\");\n            generate_button.innerHTML = \"Generate\";\n            if (this.parcel.interaction_generate && this.parcel.interaction_generate.length > 0) generate_button.innerHTML += ` (${this.parcel.interaction_generate.length})`;\n            generate_button.addEventListener(\"click\", ()=>{\n                this.renderInteractionList(\"interaction_generate\");\n            });\n            $cccf7d3b46d90071$var$DOM_PARCEL_EDIT.appendChild(generate_button);\n        }\n        if (this.parcel.type == \"structure\") {\n            // Render buttons for charges list\n            const charge_button = document.createElement(\"button\");\n            charge_button.innerHTML = \"Charges\";\n            if (this.parcel.interaction_requirement && this.parcel.interaction_requirement.length > 0) charge_button.innerHTML += ` (${this.parcel.interaction_requirement.length})`;\n            charge_button.addEventListener(\"click\", ()=>{\n                this.renderChargeList();\n            });\n            $cccf7d3b46d90071$var$DOM_PARCEL_EDIT.appendChild(charge_button);\n        }\n        // Render save button\n        const save_button = document.createElement(\"button\");\n        save_button.innerHTML = \"Save\";\n        save_button.addEventListener(\"click\", ()=>{\n            this.save();\n        });\n        $cccf7d3b46d90071$var$DOM_PARCEL_EDIT.appendChild(save_button);\n        // Render delete button\n        // Warn if delete button is clicked before triggering delete\n        const delete_button = document.createElement(\"button\");\n        delete_button.innerHTML = \"Delete\";\n        delete_button.addEventListener(\"click\", ()=>{\n            if (!confirm(\"Are you sure you want to delete this parcel?\\nThis action cannot be undone.\")) return;\n            console.log(\"Deleting \" + this.parcel.id);\n            this.delete(`${this.parcel.type}:${this.parcel.id}`);\n        });\n        $cccf7d3b46d90071$var$DOM_PARCEL_EDIT.appendChild(delete_button);\n    }\n    renderInteractionList(interaction_type) {\n        this.renderEditor();\n        // List of interactions, used for interaction_buy, interaction_sell, interaction_craft, interaction_generate\n        console.log(\"Rendering list of interactions for \" + interaction_type);\n        // Interaction name is buy,sell,craft,generate starting with a capital letter and without interaction_\n        const interaction_name = (0, $7c97e1adeaf198e6$export$2e2bcd8739ae039).capitalise_first_word(interaction_type.replace(\"interaction_\", \"\"));\n        $cccf7d3b46d90071$var$DOM_INTERACTION_LIST.innerHTML = `<h2>${interaction_name} Interactions</h2>`;\n        // Render interaction buttons that trigger renderInteraction\n        if (this.parcel[interaction_type]) for(const i in this.parcel[interaction_type]){\n            const button = document.createElement(\"button\");\n            button.innerHTML = i;\n            button.classList.add((0, $7c97e1adeaf198e6$export$2e2bcd8739ae039).validity_check(this.parcel[interaction_type][i].validate()));\n            button.addEventListener(\"click\", ()=>{\n                this.renderInteraction(interaction_type, parseInt(i));\n            });\n            $cccf7d3b46d90071$var$DOM_INTERACTION_LIST.appendChild(button);\n        }\n        // Button to add new interaction\n        const button = document.createElement(\"button\");\n        button.innerHTML = \"Add new \" + interaction_name;\n        button.addEventListener(\"click\", ()=>{\n            let newInteraction = new (0, $46210b831001efd1$export$92473e6020ad89b4)();\n            newInteraction.result = [\n                [\n                    `${this.parcel.type}:${this.parcel.id}`,\n                    1\n                ]\n            ];\n            this.parcel[interaction_type].push(newInteraction);\n            this.renderInteractionList(interaction_type);\n        });\n        $cccf7d3b46d90071$var$DOM_INTERACTION_LIST.appendChild(button);\n    }\n    renderChargeList() {\n        this.renderEditor();\n        // List of charges\n        console.log(\"Rendering list of charges\");\n        // Render charge buttons that trigger renderCharge\n        // Button to add new charge\n        $cccf7d3b46d90071$var$DOM_INTERACTION_LIST.innerHTML = `<h2>Charges</h2>`;\n        if (this.parcel.interaction_requirement != undefined) {\n            for(const i in this.parcel.interaction_requirement){\n                const button = document.createElement(\"button\");\n                button.innerHTML = String(this.parcel.interaction_requirement[i]);\n                button.addEventListener(\"click\", ()=>{\n                    this.renderCharge(parseInt(i));\n                });\n                $cccf7d3b46d90071$var$DOM_INTERACTION_LIST.appendChild(button);\n            }\n            // Button to add new charge\n            const button = document.createElement(\"button\");\n            button.innerHTML = \"Add new charge\";\n            button.addEventListener(\"click\", ()=>{\n                this.parcel.interaction_requirement.push(new (0, $46210b831001efd1$export$5c821c4fb743fae8)());\n                this.renderChargeList();\n            });\n            $cccf7d3b46d90071$var$DOM_INTERACTION_LIST.appendChild(button);\n        }\n        // List of charges used for interaction_require\n        console.log(\"Rendering list of charges\");\n    }\n    renderInteraction(interaction_type, interaction_id) {\n        this.renderInteractionList(interaction_type);\n        // Render interaction\n        console.log(\"Rendering interaction\");\n        $cccf7d3b46d90071$var$DOM_INTERACTION_EDIT.innerHTML = \"<h2>\" + (0, $7c97e1adeaf198e6$export$2e2bcd8739ae039).capitalise_first_word(interaction_type) + \": \" + interaction_id + \"</h2>\";\n        const checkbox_wrapper = document.createElement(\"div\");\n        const checkbox_label = document.createElement(\"label\");\n        checkbox_label.innerHTML = \"Unlocked\";\n        checkbox_wrapper.appendChild(checkbox_label);\n        const checkbox = document.createElement(\"input\");\n        checkbox.type = \"checkbox\";\n        checkbox.checked = this.parcel[interaction_type][interaction_id].unlocked;\n        checkbox.addEventListener(\"change\", ()=>{\n            this.parcel[interaction_type][interaction_id].unlocked = checkbox.checked;\n        });\n        checkbox_wrapper.appendChild(checkbox);\n        $cccf7d3b46d90071$var$DOM_INTERACTION_EDIT.appendChild(checkbox_wrapper);\n        // Render result / require / consume as buttons to renderSet\n        const result_button = document.createElement(\"button\");\n        result_button.innerHTML = \"Result (\" + this.parcel[interaction_type][interaction_id].result.length + \")\";\n        result_button.addEventListener(\"click\", ()=>{\n            this.renderSet(interaction_type, interaction_id, \"result\");\n        });\n        result_button.classList.add((0, $7c97e1adeaf198e6$export$2e2bcd8739ae039).validity_check(this.parcel[interaction_type][interaction_id].validateProperty(\"result\", this.stored_parcel)));\n        $cccf7d3b46d90071$var$DOM_INTERACTION_EDIT.appendChild(result_button);\n        const require_button = document.createElement(\"button\");\n        require_button.innerHTML = \"Require (\" + this.parcel[interaction_type][interaction_id].require.length + \")\";\n        require_button.addEventListener(\"click\", ()=>{\n            this.renderSet(interaction_type, interaction_id, \"require\");\n        });\n        require_button.classList.add((0, $7c97e1adeaf198e6$export$2e2bcd8739ae039).validity_check(this.parcel[interaction_type][interaction_id].validateProperty(\"require\", this.stored_parcel)));\n        $cccf7d3b46d90071$var$DOM_INTERACTION_EDIT.appendChild(require_button);\n        const consume_button = document.createElement(\"button\");\n        consume_button.innerHTML = \"Consume (\" + this.parcel[interaction_type][interaction_id].consume.length + \")\";\n        consume_button.addEventListener(\"click\", ()=>{\n            this.renderSet(interaction_type, interaction_id, \"consume\");\n        });\n        consume_button.classList.add((0, $7c97e1adeaf198e6$export$2e2bcd8739ae039).validity_check(this.parcel[interaction_type][interaction_id].validateProperty(\"consume\", this.stored_parcel)));\n        $cccf7d3b46d90071$var$DOM_INTERACTION_EDIT.appendChild(consume_button);\n    }\n    renderCharge(charge_id) {\n        this.renderChargeList();\n        // Render charge\n        console.log(\"Rendering charge\");\n    }\n    renderSet(interaction_type, interaction_id, set_type) {\n        this.renderInteraction(interaction_type, interaction_id);\n        // Render set\n        // for each item (a [parcel id, quantity pair]) render a wrapped select with options for each parcel in this.stored_parcel as well as a number input\n        // set the option to the parcel id\n        // set the number input to the quantity\n        // generate select (for use in multiple of the set)\n        const select = document.createElement(\"select\");\n        for(const i in this.stored_parcel){\n            const option = document.createElement(\"option\");\n            option.value = this.stored_parcel[i];\n            option.text = this.stored_parcel[i];\n            select.appendChild(option);\n        }\n        const firstOption = this.stored_parcel[0];\n        console.log(firstOption);\n        $cccf7d3b46d90071$var$DOM_INTERACTION_SET.innerHTML = \"<h2>\" + (0, $7c97e1adeaf198e6$export$2e2bcd8739ae039).capitalise_first_word(set_type) + \"</h2>\";\n        // render sets\n        for(const i in this.parcel[interaction_type][interaction_id][set_type]){\n            const wrapper = document.createElement(\"div\");\n            // Add select\n            const new_select = select.cloneNode(true);\n            new_select.value = this.parcel[interaction_type][interaction_id][set_type][i][0] || firstOption;\n            new_select.addEventListener(\"change\", ()=>{\n                this.parcel[interaction_type][interaction_id][set_type][i][0] = new_select.value || firstOption;\n                this.renderSet(interaction_type, interaction_id, set_type);\n            });\n            wrapper.appendChild(new_select);\n            // Add number input\n            const number_input = document.createElement(\"input\");\n            number_input.type = \"number\";\n            number_input.min = \"1\";\n            number_input.value = String(this.parcel[interaction_type][interaction_id][set_type][i][1]) || \"1\";\n            number_input.addEventListener(\"change\", ()=>{\n                this.parcel[interaction_type][interaction_id][set_type][i][1] = parseInt(number_input.value) || 1;\n                this.renderSet(interaction_type, interaction_id, set_type);\n            });\n            wrapper.appendChild(number_input);\n            // Add delete button\n            const delete_button = document.createElement(\"button\");\n            delete_button.innerHTML = \"X\";\n            delete_button.addEventListener(\"click\", ()=>{\n                this.parcel[interaction_type][interaction_id][set_type].splice(i, 1);\n                this.renderSet(interaction_type, interaction_id, set_type);\n            });\n            wrapper.appendChild(delete_button);\n            $cccf7d3b46d90071$var$DOM_INTERACTION_SET.appendChild(wrapper);\n        }\n        // button to create new sets\n        const newSetButton = document.createElement(\"button\");\n        newSetButton.innerHTML = \"Add Set\";\n        newSetButton.addEventListener(\"click\", ()=>{\n            this.parcel[interaction_type][interaction_id][set_type].push([\n                firstOption,\n                1\n            ]);\n            this.renderSet(interaction_type, interaction_id, set_type);\n        });\n        $cccf7d3b46d90071$var$DOM_INTERACTION_SET.appendChild(newSetButton);\n    }\n}\n\n\n\n// Start editor and attach to the dev console\nconst $46f5046414263a3c$var$editor = new (0, $cccf7d3b46d90071$export$b5d042d2b680aed6)();\nglobalThis.editor = $46f5046414263a3c$var$editor;\nfunction $46f5046414263a3c$var$addExampleResources() {\n    let quintessence = new (0, $732d296f0054a2bc$export$2ab3c62fbe8d8bb)(\"quintessence\", \"Quintessence\");\n    quintessence.owned = 1000;\n    quintessence.unlocked = true;\n    let ironOre = new (0, $732d296f0054a2bc$export$e9d70138bf24ca18)(\"ore_iron\", \"Iron Ore\");\n    let ironOreInteraction = new (0, $46210b831001efd1$export$92473e6020ad89b4)();\n    ironOreInteraction.result[0] = [\n        \"unique:quintessence\",\n        30\n    ];\n    ironOreInteraction.consume[0] = [\n        \"resource:ore_iron\",\n        1\n    ];\n    ironOre.interaction_sell[0] = ironOreInteraction;\n    $46f5046414263a3c$var$editor.parcel = quintessence;\n    $46f5046414263a3c$var$editor.save();\n    $46f5046414263a3c$var$editor.parcel = ironOre;\n    $46f5046414263a3c$var$editor.save();\n    $46f5046414263a3c$var$editor.checkStorage();\n    $46f5046414263a3c$var$editor.renderList();\n}\n$46f5046414263a3c$var$editor.checkStorage();\n$46f5046414263a3c$var$editor.renderList();\nif ($46f5046414263a3c$var$editor.stored_parcel.length === 0) {\n    console.info(\"Loading in example parcels!\");\n    $46f5046414263a3c$var$addExampleResources();\n}\nconsole.table($46f5046414263a3c$var$editor.parcel);\n\n\n//# sourceMappingURL=index.3477d732.js.map\n","import { interaction } from \"./properties\";\nimport { editor as editor_instance } from \"./editor\";\nimport { parcel_resource, parcel_unique } from \"./parcels\";\n\n// Start editor and attach to the dev console\nconst editor = new editor_instance();\nglobalThis.editor = editor;\n\nfunction addExampleResources() {\n\tlet quintessence = new parcel_unique(\"quintessence\", \"Quintessence\");\n\tquintessence.owned = 1000;\n\tquintessence.unlocked = true;\n\n\tlet ironOre = new parcel_resource(\"ore_iron\", \"Iron Ore\");\n\tlet ironOreInteraction = new interaction();\n\tironOreInteraction.result[0] = [\"unique:quintessence\", 30];\n\tironOreInteraction.consume[0] = [\"resource:ore_iron\", 1];\n\tironOre.interaction_sell[0] = ironOreInteraction;\n\n\teditor.parcel = quintessence;\n\teditor.save();\n\teditor.parcel = ironOre;\n\teditor.save();\n\n\teditor.checkStorage();\n\teditor.renderList();\n}\n\neditor.checkStorage();\neditor.renderList();\n\nif (editor.stored_parcel.length === 0) {\n\tconsole.info(\"Loading in example parcels!\");\n\taddExampleResources();\n}\n\nconsole.table(editor.parcel);\n","import { full_id, quantity, validation_report } from \"./type\";\n\n// =? Interactions\n// Interactions are the requirements for possible actions on the parcel.\n// This entails the requirements to buy, sell, create and craft an existence of a parcel\nexport class interaction {\n\tpublic unlocked: boolean = false;\n\tpublic result: quantity[] = [];\n\tpublic require: quantity[] = [];\n\tpublic consume: quantity[] = [];\n\n\tvalidate(): validation_report[] {\n\t\tlet report: validation_report[] = [];\n\n\t\tif (this.result.length === 0) {\n\t\t\treport.push([\"warning\", \"Interaction is missing a result.\"]);\n\t\t}\n\t\tif (this.require.length === 0 && this.consume.length === 0) {\n\t\t\treport.push([\"warning\", \"Interaction is missing a requirement or consumption.\"]);\n\t\t}\n\n\t\treturn report;\n\t}\n\tvalidateProperty(property: \"result\" | \"require\" | \"consume\", validIds: full_id[]): validation_report[] {\n\t\tlet report: validation_report[] = [];\n\n\t\tif (property == \"result\") {\n\t\t\tif (this.result.length === 0) {\n\t\t\t\treport.push([\"warning\", \"Interaction is missing a result.\"]);\n\t\t\t}\n\t\t} else {\n\t\t\tif (this.require.length === 0 && this.consume.length === 0) {\n\t\t\t\treport.push([\"warning\", \"Interaction is missing a requirement or consumption.\"]);\n\t\t\t}\n\t\t}\n\n\t\treport = [...report, ...this.validateSubproperties(validIds)];\n\n\t\t// console.table(report);\n\n\t\treturn report;\n\t}\n\tprivate validateSubproperties(validIds: full_id[]): validation_report[] {\n\t\tlet report: validation_report[] = [];\n\t\tlet properties = [\"result\", \"require\", \"consume\"];\n\t\tfor (const property of properties) {\n\t\t\t// if any of the ids are not valid, report an error\n\t\t\tfor (const i in this[property]) {\n\t\t\t\tif (!validIds.includes(this[property][i][0])) {\n\t\t\t\t\treport.push([\"warning\", \"Invalid \" + property + \" ID: \" + this[property][i][0]]);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// if any of the ids are 0 give invalid, if less than 0 give warning\n\t\t\tfor (const i in this[property]) {\n\t\t\t\tif (this[property][i][1] <= 0) {\n\t\t\t\t\treport.push([\"invalid\", \"Invalid \" + property + \" quantity: \" + this[property][i][1]]);\n\t\t\t\t} else if (this[property][i][1] < 0) {\n\t\t\t\t\treport.push([\"warning\", \"Invalid \" + property + \" quantity: \" + this[property][i][1]]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn report;\n\t}\n}\n\n// =? Charges\n// Charges are a property of structures\n// When an interaction is applied, if a structure is needed then that structure will begin working on the interaction\n// the total charge defines the speed at which\nexport class charge {\n\tpublic unlocked: boolean = false;\n\tpublic count: number = 0;\n\tpublic effect_add: number = 0;\n\tpublic effect_multiply: number = 0;\n\tpublic require: quantity[] = [];\n\tpublic consume: quantity[] = [];\n}\n","import { full_id, regexFullID, regexID, regexName, type } from \"./type\";\nimport { parcel_resource, parcel_structure, parcel_research, parcel_unique, unknown_parcel } from \"./parcels\";\nimport { interaction, charge } from \"./properties\";\n\nimport utils from \"./util\";\n\nconst DOM_PARCEL_LIST = document.getElementById(\"parcel_list\") as HTMLDivElement;\nconst DOM_PARCEL_EDIT = document.getElementById(\"parcel_edit\") as HTMLDivElement;\n\nconst DOM_INTERACTION_LIST = document.getElementById(\"parcel_interaction_list\") as HTMLDivElement;\nconst DOM_INTERACTION_EDIT = document.getElementById(\"parcel_interaction_edit\") as HTMLDivElement;\nconst DOM_INTERACTION_SET = document.getElementById(\"parcel_interaction_set\") as HTMLDivElement;\n\nconst DOM_PARCEL_ADD_TYPE = document.getElementById(\"parcel_add_type\") as HTMLSelectElement;\nconst DOM_PARCEL_ADD_ID = document.getElementById(\"parcel_add_id\") as HTMLInputElement;\nconst DOM_PARCEL_ADD_BUTTON = document.getElementById(\"parcel_add_button\") as HTMLButtonElement;\n\nfunction checkParcelAddIDEmpty() {\n\t// If empty add .empty class\n\tif (DOM_PARCEL_ADD_ID.value === \"\") {\n\t\tDOM_PARCEL_ADD_ID.classList.add(\"empty\");\n\t} else {\n\t\tDOM_PARCEL_ADD_ID.classList.remove(\"empty\");\n\t}\n}\nDOM_PARCEL_ADD_ID.addEventListener(\"input\", checkParcelAddIDEmpty);\ncheckParcelAddIDEmpty();\n\nconst PROPERTY_IDREGEX = \"[a-z]([a-z_]*[a-z])?\";\nconst PROPERTY_NAMEREGEX = \"[a-zA-Z](?:[a-zA-Z ]*[a-zA-Z])?\";\n\nclass editor {\n\tpublic version: string = \"Parcel Editor - 6.0.0\";\n\tpublic parcel: unknown_parcel;\n\n\tpublic stored_parcel: full_id[] = [];\n\n\tconstructor(default_start: boolean = true) {\n\t\t// Init\n\t\tif (default_start) {\n\t\t\tthis.logVersion();\n\t\t\tthis.checkStorage();\n\t\t\t// this.renderList();\n\t\t\tthis.clear();\n\t\t\tconsole.log(\"Editor Ready!\");\n\t\t\tthis.renderEditor();\n\t\t} else {\n\t\t\tconsole.warn(\"Editor started in uninitialised state.\\n Did you want to do this?\");\n\t\t}\n\t\tDOM_PARCEL_ADD_BUTTON.addEventListener(\"click\", () => {\n\t\t\tthis.new_parcel();\n\t\t\tthis.refreshList();\n\t\t});\n\t}\n\tlogVersion() {\n\t\tconsole.log(this.version);\n\t}\n\n\tsave() {\n\t\tif (this.parcel.id === \"\") {\n\t\t\tconsole.warn(\"Blank ID given to save process. Not saving\");\n\t\t} else if (regexID.test(this.parcel.id)) {\n\t\t\tlocalStorage.setItem(`${this.parcel.type}:${this.parcel.id}`, JSON.stringify(this.parcel));\n\t\t\tconsole.log(`Saved ${this.parcel.type}:${this.parcel.id} to localStorage`);\n\t\t} else {\n\t\t\tconsole.error(`ID '${this.parcel.id}' is invalid. Failed to save data.`);\n\t\t}\n\t}\n\tload(full_id: full_id) {\n\t\tlet data: string | null;\n\t\tif ((data = localStorage.getItem(full_id))) {\n\t\t\tconst parsed_data = JSON.parse(data);\n\t\t\t// Clear parcel\n\t\t\tthis.parcel = null;\n\t\t\t// Assign to parcel\n\t\t\tthis.parcel = parsed_data as unknown_parcel;\n\t\t\t// Set this parcels class to be of the correct class type\n\t\t\tswitch (this.parcel.type) {\n\t\t\t\tcase \"resource\":\n\t\t\t\t\tthis.parcel = new parcel_resource(this.parcel.id, this.parcel.name);\n\t\t\t\t\tthis.parcel.owned = parsed_data.owned || 0;\n\t\t\t\t\tthis.parcel.unlocked = parsed_data.unlocked || false;\n\t\t\t\t\tthis.parcel.interaction_buy = parsed_data.interaction_buy || [];\n\t\t\t\t\tthis.parcel.interaction_sell = parsed_data.interaction_sell || [];\n\t\t\t\t\tthis.parcel.interaction_craft = parsed_data.interaction_craft || [];\n\t\t\t\t\tthis.parcel.interaction_generate = parsed_data.interaction_generate || [];\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"structure\":\n\t\t\t\t\tthis.parcel = new parcel_structure(this.parcel.id, this.parcel.name);\n\t\t\t\t\tthis.parcel.owned = parsed_data.owned || 0;\n\t\t\t\t\tthis.parcel.unlocked = parsed_data.unlocked || false;\n\t\t\t\t\tthis.parcel.interaction_buy = parsed_data.interaction_buy || [];\n\t\t\t\t\tthis.parcel.interaction_sell = parsed_data.interaction_sell || [];\n\t\t\t\t\tthis.parcel.interaction_craft = parsed_data.interaction_craft || [];\n\t\t\t\t\tthis.parcel.interaction_generate = parsed_data.interaction_generate || [];\n\t\t\t\t\tthis.parcel.interaction_requirement = parsed_data.interaction_requirement || [];\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"research\":\n\t\t\t\t\tthis.parcel = new parcel_research(this.parcel.id, this.parcel.name);\n\t\t\t\t\tthis.parcel.unlocked = parsed_data.unlocked || false;\n\t\t\t\t\tthis.parcel.interaction_craft = parsed_data.interaction_craft || [];\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"unique\":\n\t\t\t\t\tthis.parcel = new parcel_unique(this.parcel.id, this.parcel.name);\n\t\t\t\t\tthis.parcel.unlocked = parsed_data.unlocked || false;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\t// If the parcel contains any interactions, assign each of them to the class interaction without overwriting\n\t\t\tlet interaction_types = [\"interaction_buy\", \"interaction_sell\", \"interaction_craft\", \"interaction_generate\"];\n\t\t\tfor (let i = 0; i < interaction_types.length; i++) {\n\t\t\t\tlet type = interaction_types[i];\n\t\t\t\tif (this.parcel[type]) {\n\t\t\t\t\tfor (let j = 0; j < this.parcel[type].length; j++) {\n\t\t\t\t\t\t// Convert to class\n\t\t\t\t\t\tlet new_interaction = new interaction();\n\t\t\t\t\t\t// Add data\n\t\t\t\t\t\tnew_interaction.result = this.parcel[type][j].result;\n\t\t\t\t\t\tnew_interaction.consume = this.parcel[type][j].consume;\n\t\t\t\t\t\tnew_interaction.require = this.parcel[type][j].require;\n\t\t\t\t\t\tnew_interaction.unlocked = this.parcel[type][j].unlocked;\n\t\t\t\t\t\t// Assign\n\t\t\t\t\t\tthis.parcel[type][j] = new_interaction;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconsole.info(`Loaded ${parsed_data.type}:${parsed_data.id}`);\n\t\t} else {\n\t\t\tconsole.error(`${full_id} does not exist. Failed to load data.`);\n\t\t}\n\t}\n\tnew_parcel() {\n\t\tconst new_type = DOM_PARCEL_ADD_TYPE.value as type;\n\t\tconst id = DOM_PARCEL_ADD_ID.value;\n\n\t\tif (!regexID.test(id)) {\n\t\t\tconsole.error(`${id} is not a valid ID, unable to create`);\n\t\t\treturn;\n\t\t}\n\n\t\tthis.save();\n\n\t\tconst name = utils.capitalise_all_words(utils.removeSymbols(id));\n\n\t\tswitch (new_type) {\n\t\t\tcase \"resource\":\n\t\t\t\tthis.parcel = new parcel_resource(id, name);\n\t\t\t\tbreak;\n\t\t\tcase \"structure\":\n\t\t\t\tthis.parcel = new parcel_structure(id, name);\n\t\t\t\tbreak;\n\t\t\tcase \"research\":\n\t\t\t\tthis.parcel = new parcel_research(id, name);\n\t\t\t\tbreak;\n\t\t\tcase \"unique\":\n\t\t\t\tthis.parcel = new parcel_unique(id, name);\n\t\t\t\tbreak;\n\t\t}\n\n\t\tthis.save();\n\t}\n\tdelete(full_id: full_id) {\n\t\tif (localStorage.getItem(full_id)) {\n\t\t\tlocalStorage.removeItem(full_id);\n\t\t\tconsole.info(`Deleted ${full_id}`);\n\t\t} else {\n\t\t\tconsole.error(`${full_id} does not exist. Failed to delete data.`);\n\t\t}\n\t\t// If the current parcel is deleted, clear it\n\t\tif (full_id == `${this.parcel.type}:${this.parcel.id}`) {\n\t\t\tthis.clear();\n\t\t}\n\t\tthis.refreshList();\n\t}\n\tclear(type: type = \"resource\", id: string = \"\") {\n\t\tif (type == \"resource\") {\n\t\t\tthis.parcel = new parcel_resource(id, utils.id_to_name(id));\n\t\t} else if (type == \"structure\") {\n\t\t\tthis.parcel = new parcel_structure(id, utils.id_to_name(id));\n\t\t} else if (type == \"research\") {\n\t\t\tthis.parcel = new parcel_research(id, utils.id_to_name(id));\n\t\t} else if (type == \"unique\") {\n\t\t\tthis.parcel = new parcel_unique(id, utils.id_to_name(id));\n\t\t} else {\n\t\t\tconsole.error(`Invalid type '${type}' passed to clear()`);\n\t\t}\n\t}\n\tcheckStorage() {\n\t\tthis.stored_parcel = [];\n\t\tfor (let i = 0; i < localStorage.length; i++) {\n\t\t\tif (!regexFullID.test(localStorage.key(i) as full_id)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst valid_id: full_id = localStorage.key(i) as full_id;\n\t\t\tthis.stored_parcel.push(valid_id);\n\t\t}\n\t\tthis.stored_parcel.sort((a, b) => a.localeCompare(b));\n\t\tconsole.table(this.stored_parcel);\n\t}\n\trefreshList() {\n\t\tthis.checkStorage();\n\t\tthis.renderList();\n\t}\n\tclearDOM() {\n\t\tDOM_PARCEL_LIST.innerHTML = \"\";\n\t\tDOM_PARCEL_EDIT.innerHTML = \"\";\n\t\tDOM_INTERACTION_LIST.innerHTML = \"\";\n\t\tDOM_INTERACTION_EDIT.innerHTML = \"\";\n\t\tDOM_INTERACTION_SET.innerHTML = \"\";\n\t}\n\trenderList() {\n\t\tthis.clearDOM();\n\t\t// Render list\n\t\tif (this.stored_parcel.length === 0) {\n\t\t\tconsole.warn(\"No parcels found\");\n\t\t\treturn;\n\t\t}\n\t\tconsole.log(\"Rendering list of parcels\");\n\t\tlet lastParcelType = \"\";\n\t\tfor (const i in this.stored_parcel) {\n\t\t\tif (lastParcelType != this.stored_parcel[i].split(\":\")[0]) {\n\t\t\t\tconst h3 = document.createElement(\"h3\");\n\t\t\t\th3.innerHTML = utils.capitalise_first_word(this.stored_parcel[i].split(\":\")[0]);\n\t\t\t\tDOM_PARCEL_LIST.appendChild(h3);\n\t\t\t\tlastParcelType = this.stored_parcel[i].split(\":\")[0];\n\t\t\t}\n\t\t\tconst button = document.createElement(\"button\");\n\t\t\tbutton.innerHTML = this.stored_parcel[i];\n\t\t\tbutton.addEventListener(\"click\", () => {\n\t\t\t\tthis.clearDOM();\n\t\t\t\tthis.load(this.stored_parcel[i]);\n\t\t\t\tthis.renderEditor();\n\t\t\t});\n\t\t\tDOM_PARCEL_LIST.appendChild(button);\n\t\t}\n\t}\n\trenderEditor() {\n\t\tthis.clearDOM();\n\t\tthis.renderList();\n\n\t\tif (this.parcel === undefined) {\n\t\t\tconsole.warn(\"No parcel loaded. Failed to render editor.\");\n\t\t\treturn;\n\t\t}\n\n\t\t// Render id and name inputs with validation\n\t\tconst id_input = document.createElement(\"input\");\n\t\tid_input.type = \"text\";\n\t\tid_input.value = this.parcel.id;\n\t\tid_input.placeholder = \"ID\";\n\t\tid_input.pattern = PROPERTY_IDREGEX;\n\t\tid_input.addEventListener(\"change\", () => {\n\t\t\tif (!regexID.test(id_input.value)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.parcel.id = id_input.value;\n\t\t});\n\t\tDOM_PARCEL_EDIT.appendChild(id_input);\n\n\t\tconst name_input = document.createElement(\"input\");\n\t\tname_input.type = \"text\";\n\t\tname_input.value = this.parcel.name;\n\t\tname_input.placeholder = \"Name\";\n\t\tname_input.pattern = PROPERTY_NAMEREGEX;\n\t\tname_input.addEventListener(\"change\", () => {\n\t\t\tif (!regexName.test(name_input.value)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.parcel.name = name_input.value;\n\t\t});\n\t\tDOM_PARCEL_EDIT.appendChild(name_input);\n\n\t\tif (this.parcel.type == \"resource\" || this.parcel.type == \"structure\" || this.parcel.type == \"unique\") {\n\t\t\t// Render owned\n\t\t\tconst owned_input = document.createElement(\"input\");\n\t\t\towned_input.type = \"number\";\n\t\t\towned_input.value = this.parcel.owned.toString() || \"0\";\n\t\t\towned_input.placeholder = \"Owned\";\n\t\t\towned_input.min = \"0\";\n\t\t\towned_input.addEventListener(\"change\", () => {\n\t\t\t\t(this.parcel as parcel_resource | parcel_structure).owned = Number(owned_input.value);\n\t\t\t});\n\t\t\tDOM_PARCEL_EDIT.appendChild(owned_input);\n\t\t}\n\n\t\t// Render unlocked (boolean checkbox)\n\t\tconst checkbox_wrapper = document.createElement(\"div\");\n\t\tconst unlocked_checkbox = document.createElement(\"input\");\n\t\tconst checkbox_label = document.createElement(\"label\");\n\t\tcheckbox_label.innerHTML = \"Unlocked\";\n\t\tunlocked_checkbox.type = \"checkbox\";\n\t\tunlocked_checkbox.checked = this.parcel.unlocked;\n\t\tunlocked_checkbox.addEventListener(\"change\", () => {\n\t\t\tthis.parcel.unlocked = Boolean(unlocked_checkbox.checked);\n\t\t});\n\t\tcheckbox_wrapper.appendChild(checkbox_label);\n\t\tcheckbox_wrapper.appendChild(unlocked_checkbox);\n\t\tDOM_PARCEL_EDIT.appendChild(checkbox_wrapper);\n\n\t\t// Render interactions if type is suitable\n\t\t// Resource has buy,sell,craft,generate\n\t\t// Structure has buy,sell,craft + charges\n\t\t// Research has craft\n\t\t// Unique has nothing\n\t\tif (this.parcel.type == \"resource\" || this.parcel.type == \"structure\") {\n\t\t\t// Render buy,sell buttons that trigger renderInteractionList\n\t\t\tconst buy_button = document.createElement(\"button\");\n\t\t\tbuy_button.innerHTML = \"Buy\";\n\t\t\tif (this.parcel.interaction_buy && this.parcel.interaction_buy.length > 0) {\n\t\t\t\tbuy_button.innerHTML += ` (${this.parcel.interaction_buy.length})`;\n\t\t\t}\n\t\t\tbuy_button.addEventListener(\"click\", () => {\n\t\t\t\tthis.renderInteractionList(\"interaction_buy\");\n\t\t\t});\n\t\t\tconst sell_button = document.createElement(\"button\");\n\t\t\tsell_button.innerHTML = \"Sell\";\n\t\t\tif (this.parcel.interaction_sell && this.parcel.interaction_sell.length > 0) {\n\t\t\t\tsell_button.innerHTML += ` (${this.parcel.interaction_sell.length})`;\n\t\t\t}\n\t\t\tsell_button.addEventListener(\"click\", () => {\n\t\t\t\tthis.renderInteractionList(\"interaction_sell\");\n\t\t\t});\n\t\t\tDOM_PARCEL_EDIT.appendChild(buy_button);\n\t\t\tDOM_PARCEL_EDIT.appendChild(sell_button);\n\t\t}\n\t\tif (this.parcel.type == \"resource\" || this.parcel.type == \"structure\" || this.parcel.type == \"research\") {\n\t\t\t// Render craft buttons that trigger renderInteractionList\n\t\t\tconst craft_button = document.createElement(\"button\");\n\t\t\tcraft_button.innerHTML = \"Craft\";\n\t\t\tif (this.parcel.interaction_craft && this.parcel.interaction_craft.length > 0) {\n\t\t\t\tcraft_button.innerHTML += ` (${this.parcel.interaction_craft.length})`;\n\t\t\t}\n\t\t\tcraft_button.addEventListener(\"click\", () => {\n\t\t\t\tthis.renderInteractionList(\"interaction_craft\");\n\t\t\t});\n\t\t\tDOM_PARCEL_EDIT.appendChild(craft_button);\n\t\t}\n\t\tif (this.parcel.type == \"resource\") {\n\t\t\t// Render generate buttons that trigger renderInteractionList\n\t\t\tconst generate_button = document.createElement(\"button\");\n\t\t\tgenerate_button.innerHTML = \"Generate\";\n\t\t\tif (this.parcel.interaction_generate && this.parcel.interaction_generate.length > 0) {\n\t\t\t\tgenerate_button.innerHTML += ` (${this.parcel.interaction_generate.length})`;\n\t\t\t}\n\t\t\tgenerate_button.addEventListener(\"click\", () => {\n\t\t\t\tthis.renderInteractionList(\"interaction_generate\");\n\t\t\t});\n\t\t\tDOM_PARCEL_EDIT.appendChild(generate_button);\n\t\t}\n\t\tif (this.parcel.type == \"structure\") {\n\t\t\t// Render buttons for charges list\n\t\t\tconst charge_button = document.createElement(\"button\");\n\t\t\tcharge_button.innerHTML = \"Charges\";\n\t\t\tif (this.parcel.interaction_requirement && this.parcel.interaction_requirement.length > 0) {\n\t\t\t\tcharge_button.innerHTML += ` (${this.parcel.interaction_requirement.length})`;\n\t\t\t}\n\t\t\tcharge_button.addEventListener(\"click\", () => {\n\t\t\t\tthis.renderChargeList();\n\t\t\t});\n\t\t\tDOM_PARCEL_EDIT.appendChild(charge_button);\n\t\t}\n\t\t// Render save button\n\t\tconst save_button = document.createElement(\"button\");\n\t\tsave_button.innerHTML = \"Save\";\n\t\tsave_button.addEventListener(\"click\", () => {\n\t\t\tthis.save();\n\t\t});\n\t\tDOM_PARCEL_EDIT.appendChild(save_button);\n\n\t\t// Render delete button\n\t\t// Warn if delete button is clicked before triggering delete\n\t\tconst delete_button = document.createElement(\"button\");\n\t\tdelete_button.innerHTML = \"Delete\";\n\t\tdelete_button.addEventListener(\"click\", () => {\n\t\t\tif (!confirm(\"Are you sure you want to delete this parcel?\\nThis action cannot be undone.\")) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconsole.log(\"Deleting \" + this.parcel.id);\n\t\t\tthis.delete(`${this.parcel.type}:${this.parcel.id}`);\n\t\t});\n\t\tDOM_PARCEL_EDIT.appendChild(delete_button);\n\t}\n\n\trenderInteractionList(interaction_type: interaction_types) {\n\t\tthis.renderEditor();\n\n\t\t// List of interactions, used for interaction_buy, interaction_sell, interaction_craft, interaction_generate\n\t\tconsole.log(\"Rendering list of interactions for \" + interaction_type);\n\t\t// Interaction name is buy,sell,craft,generate starting with a capital letter and without interaction_\n\t\tconst interaction_name = utils.capitalise_first_word(interaction_type.replace(\"interaction_\", \"\"));\n\t\tDOM_INTERACTION_LIST.innerHTML = `<h2>${interaction_name} Interactions</h2>`;\n\t\t// Render interaction buttons that trigger renderInteraction\n\t\tif (this.parcel[interaction_type]) {\n\t\t\tfor (const i in this.parcel[interaction_type]) {\n\t\t\t\tconst button = document.createElement(\"button\");\n\t\t\t\tbutton.innerHTML = i;\n\t\t\t\tbutton.classList.add(utils.validity_check(this.parcel[interaction_type][i].validate()));\n\n\t\t\t\tbutton.addEventListener(\"click\", () => {\n\t\t\t\t\tthis.renderInteraction(interaction_type, parseInt(i));\n\t\t\t\t});\n\t\t\t\tDOM_INTERACTION_LIST.appendChild(button);\n\t\t\t}\n\t\t}\n\t\t// Button to add new interaction\n\t\tconst button = document.createElement(\"button\");\n\t\tbutton.innerHTML = \"Add new \" + interaction_name;\n\t\tbutton.addEventListener(\"click\", () => {\n\t\t\tlet newInteraction = new interaction();\n\t\t\tnewInteraction.result = [[`${this.parcel.type}:${this.parcel.id}`, 1]];\n\t\t\tthis.parcel[interaction_type].push(newInteraction);\n\t\t\tthis.renderInteractionList(interaction_type);\n\t\t});\n\t\tDOM_INTERACTION_LIST.appendChild(button);\n\t}\n\trenderChargeList() {\n\t\tthis.renderEditor();\n\n\t\t// List of charges\n\t\tconsole.log(\"Rendering list of charges\");\n\t\t// Render charge buttons that trigger renderCharge\n\t\t// Button to add new charge\n\n\t\tDOM_INTERACTION_LIST.innerHTML = `<h2>Charges</h2>`;\n\t\tif ((this.parcel as parcel_structure).interaction_requirement != undefined) {\n\t\t\tfor (const i in (this.parcel as parcel_structure).interaction_requirement) {\n\t\t\t\tconst button = document.createElement(\"button\");\n\t\t\t\tbutton.innerHTML = String((this.parcel as parcel_structure).interaction_requirement[i]);\n\t\t\t\tbutton.addEventListener(\"click\", () => {\n\t\t\t\t\tthis.renderCharge(parseInt(i));\n\t\t\t\t});\n\t\t\t\tDOM_INTERACTION_LIST.appendChild(button);\n\t\t\t}\n\n\t\t\t// Button to add new charge\n\t\t\tconst button = document.createElement(\"button\");\n\t\t\tbutton.innerHTML = \"Add new charge\";\n\t\t\tbutton.addEventListener(\"click\", () => {\n\t\t\t\t(this.parcel as parcel_structure).interaction_requirement.push(new charge());\n\t\t\t\tthis.renderChargeList();\n\t\t\t});\n\t\t\tDOM_INTERACTION_LIST.appendChild(button);\n\t\t}\n\n\t\t// List of charges used for interaction_require\n\t\tconsole.log(\"Rendering list of charges\");\n\t}\n\trenderInteraction(interaction_type: interaction_types, interaction_id: number) {\n\t\tthis.renderInteractionList(interaction_type);\n\t\t// Render interaction\n\t\tconsole.log(\"Rendering interaction\");\n\n\t\tDOM_INTERACTION_EDIT.innerHTML = \"<h2>\" + utils.capitalise_first_word(interaction_type) + \": \" + interaction_id + \"</h2>\";\n\n\t\tconst checkbox_wrapper = document.createElement(\"div\");\n\t\tconst checkbox_label = document.createElement(\"label\");\n\t\tcheckbox_label.innerHTML = \"Unlocked\";\n\t\tcheckbox_wrapper.appendChild(checkbox_label);\n\t\tconst checkbox = document.createElement(\"input\");\n\t\tcheckbox.type = \"checkbox\";\n\t\tcheckbox.checked = this.parcel[interaction_type][interaction_id].unlocked;\n\t\tcheckbox.addEventListener(\"change\", () => {\n\t\t\tthis.parcel[interaction_type][interaction_id].unlocked = checkbox.checked;\n\t\t});\n\t\tcheckbox_wrapper.appendChild(checkbox);\n\t\tDOM_INTERACTION_EDIT.appendChild(checkbox_wrapper);\n\t\t// Render result / require / consume as buttons to renderSet\n\n\t\tconst result_button = document.createElement(\"button\");\n\t\tresult_button.innerHTML = \"Result (\" + (this.parcel[interaction_type][interaction_id] as interaction).result.length + \")\";\n\t\tresult_button.addEventListener(\"click\", () => {\n\t\t\tthis.renderSet(interaction_type, interaction_id, \"result\");\n\t\t});\n\n\t\tresult_button.classList.add(\n\t\t\tutils.validity_check(\n\t\t\t\t(this.parcel[interaction_type][interaction_id] as interaction).validateProperty(\"result\", this.stored_parcel)\n\t\t\t)\n\t\t);\n\t\tDOM_INTERACTION_EDIT.appendChild(result_button);\n\t\tconst require_button = document.createElement(\"button\");\n\t\trequire_button.innerHTML = \"Require (\" + (this.parcel[interaction_type][interaction_id] as interaction).require.length + \")\";\n\t\trequire_button.addEventListener(\"click\", () => {\n\t\t\tthis.renderSet(interaction_type, interaction_id, \"require\");\n\t\t});\n\n\t\trequire_button.classList.add(\n\t\t\tutils.validity_check(\n\t\t\t\t(this.parcel[interaction_type][interaction_id] as interaction).validateProperty(\"require\", this.stored_parcel)\n\t\t\t)\n\t\t);\n\t\tDOM_INTERACTION_EDIT.appendChild(require_button);\n\t\tconst consume_button = document.createElement(\"button\");\n\t\tconsume_button.innerHTML = \"Consume (\" + (this.parcel[interaction_type][interaction_id] as interaction).consume.length + \")\";\n\t\tconsume_button.addEventListener(\"click\", () => {\n\t\t\tthis.renderSet(interaction_type, interaction_id, \"consume\");\n\t\t});\n\n\t\tconsume_button.classList.add(\n\t\t\tutils.validity_check(\n\t\t\t\t(this.parcel[interaction_type][interaction_id] as interaction).validateProperty(\"consume\", this.stored_parcel)\n\t\t\t)\n\t\t);\n\n\t\tDOM_INTERACTION_EDIT.appendChild(consume_button);\n\t}\n\trenderCharge(charge_id: number) {\n\t\tthis.renderChargeList();\n\t\t// Render charge\n\t\tconsole.log(\"Rendering charge\");\n\t}\n\trenderSet(interaction_type: interaction_types, interaction_id: number, set_type: \"result\" | \"require\" | \"consume\") {\n\t\tthis.renderInteraction(interaction_type, interaction_id);\n\t\t// Render set\n\t\t// for each item (a [parcel id, quantity pair]) render a wrapped select with options for each parcel in this.stored_parcel as well as a number input\n\t\t// set the option to the parcel id\n\t\t// set the number input to the quantity\n\n\t\t// generate select (for use in multiple of the set)\n\t\tconst select = document.createElement(\"select\") as HTMLSelectElement;\n\t\tfor (const i in this.stored_parcel) {\n\t\t\tconst option = document.createElement(\"option\") as HTMLOptionElement;\n\t\t\toption.value = this.stored_parcel[i];\n\t\t\toption.text = this.stored_parcel[i];\n\t\t\tselect.appendChild(option);\n\t\t}\n\t\tconst firstOption = this.stored_parcel[0];\n\t\tconsole.log(firstOption);\n\n\t\tDOM_INTERACTION_SET.innerHTML = \"<h2>\" + utils.capitalise_first_word(set_type) + \"</h2>\";\n\n\t\t// render sets\n\t\tfor (const i in this.parcel[interaction_type][interaction_id][set_type]) {\n\t\t\tconst wrapper = document.createElement(\"div\");\n\n\t\t\t// Add select\n\t\t\tconst new_select = select.cloneNode(true) as HTMLSelectElement;\n\t\t\tnew_select.value = this.parcel[interaction_type][interaction_id][set_type][i][0] || firstOption;\n\t\t\tnew_select.addEventListener(\"change\", () => {\n\t\t\t\tthis.parcel[interaction_type][interaction_id][set_type][i][0] = new_select.value || firstOption;\n\t\t\t\tthis.renderSet(interaction_type, interaction_id, set_type);\n\t\t\t});\n\t\t\twrapper.appendChild(new_select);\n\n\t\t\t// Add number input\n\t\t\tconst number_input = document.createElement(\"input\");\n\t\t\tnumber_input.type = \"number\";\n\t\t\tnumber_input.min = \"1\";\n\t\t\tnumber_input.value = String(this.parcel[interaction_type][interaction_id][set_type][i][1]) || \"1\";\n\t\t\tnumber_input.addEventListener(\"change\", () => {\n\t\t\t\tthis.parcel[interaction_type][interaction_id][set_type][i][1] = parseInt(number_input.value) || 1;\n\t\t\t\tthis.renderSet(interaction_type, interaction_id, set_type);\n\t\t\t});\n\t\t\twrapper.appendChild(number_input);\n\n\t\t\t// Add delete button\n\t\t\tconst delete_button = document.createElement(\"button\");\n\t\t\tdelete_button.innerHTML = \"X\";\n\t\t\tdelete_button.addEventListener(\"click\", () => {\n\t\t\t\tthis.parcel[interaction_type][interaction_id][set_type].splice(i, 1);\n\t\t\t\tthis.renderSet(interaction_type, interaction_id, set_type);\n\t\t\t});\n\t\t\twrapper.appendChild(delete_button);\n\n\t\t\tDOM_INTERACTION_SET.appendChild(wrapper);\n\t\t}\n\n\t\t// button to create new sets\n\t\tconst newSetButton = document.createElement(\"button\");\n\t\tnewSetButton.innerHTML = \"Add Set\";\n\t\tnewSetButton.addEventListener(\"click\", () => {\n\t\t\tthis.parcel[interaction_type][interaction_id][set_type].push([firstOption, 1]);\n\t\t\tthis.renderSet(interaction_type, interaction_id, set_type);\n\t\t});\n\t\tDOM_INTERACTION_SET.appendChild(newSetButton);\n\t}\n}\n\ntype interaction_types = \"interaction_buy\" | \"interaction_sell\" | \"interaction_craft\" | \"interaction_generate\";\n\n// const editor = new editor_instance();\n\nexport { editor };\n","// ? Resource, Structure, Research, or Unique\nexport type type = \"resource\" | \"structure\" | \"research\" | \"unique\";\n// ? Full ID includes type followed by ID\nexport type full_id = `${type}:${string}`;\n// ? [full id of parcel, quantity of aforementioned parcel]\n\nexport type quantity = [full_id, number];\n// ? Valid --> There are no issues\n// ? Invalid --> There are issues that must be resolved\n// ? Warning --> There are possible issues but they can be resolved later\nexport type validation_result = \"valid\" | \"invalid\" | \"warning\";\n// ? [result, message to display]\nexport type validation_report = [validation_result, string];\n\n// ? Regex for ID and Name\n// ? regexID --> Contains only lowercase letters and underscores, cannot start or end with an underscore\nexport const regexID = new RegExp(\"^[a-z]([a-z_]*[a-z])?$\");\n// ? regexName --> Contains only letters and spaces, cannot start or end with a space\nexport const regexName = new RegExp(\"^[a-zA-Z](?:[a-zA-Z ]*[a-zA-Z])?$\");\n// ? regexFullID --> starts with a valid type, then a colon : then a valid regexID\nexport const regexFullID = new RegExp(`^(resource|structure|research|unique)\\:(([a-z]([a-z_]*[a-z])?))$`);","import { interaction, charge } from \"./properties\";\nimport { type, validation_report, regexID, regexName } from \"./type\";\n\nexport type unknown_parcel = parcel_resource | parcel_structure | parcel_research | parcel_unique;\ntype interaction_name = \"interaction_buy\" | \"interaction_sell\" | \"interaction_craft\" | \"interaction_generate\";\n\n// ? The base abstract parcel class\n// save() loads all properties into localStorage\n// load(full id) tries to load the provided id into itself\n// validate_parcel() checks that all properties of the abstract parcel class are valid\nabstract class parcel {\n\tpublic unlocked: boolean = false;\n\tconstructor(public id: string, public type: type, public name: string) {}\n\tvalidate_parcel(): validation_report[] {\n\t\tlet report: validation_report[] = [];\n\t\tif (!regexID.test(this.id)) {\n\t\t\treport.push([\"invalid\", \"ID is invalid.\"]);\n\t\t}\n\t\tif (!regexName.test(this.name)) {\n\t\t\treport.push([\"warning\", \"Name is invalid.\"]);\n\t\t}\n\n\t\treport = [...report, ...this.validate_self()];\n\n\t\tfor (const i in this.interactions) {\n\t\t\treport = [...report, ...this.validate_interaction[this.interactions[i]]];\n\t\t}\n\n\t\treturn report;\n\t}\n\tabstract validate_self(): validation_report[];\n\tpublic interactions: interaction_name[] = [];\n\tvalidate_interaction(target: interaction_name): validation_report[] {\n\t\tlet report: validation_report[] = [];\n\n\t\tconsole.log(target);\n\n\t\tfor (const i in this[target]) {\n\t\t\tconst result = (this[target][i] as interaction).validate();\n\t\t\treport = [...report, ...result];\n\t\t}\n\n\t\treturn report;\n\t}\n}\n\n// ? Parcel variant for resources\n// resources are always of type resource\n// owned is the amount of the resource in the players possession\n// interactions are methods to aquire the resource\nexport class parcel_resource extends parcel {\n\tpublic type: \"resource\" = \"resource\";\n\tpublic owned: number = 0;\n\tpublic interactions: interaction_name[] = [\"interaction_buy\", \"interaction_sell\", \"interaction_craft\", \"interaction_generate\"];\n\n\tpublic interaction_buy: interaction[] = [];\n\tpublic interaction_sell: interaction[] = [];\n\tpublic interaction_craft: interaction[] = [];\n\tpublic interaction_generate: interaction[] = [];\n\n\tconstructor(public id: string, public name: string) {\n\t\tsuper(id, \"resource\", name);\n\t}\n\tvalidate_self(): validation_report[] {\n\t\tlet report: validation_report[] = [];\n\t\treport.push(validate_not_negative(this.owned, \"Owned\"));\n\n\t\tif (this.interaction_buy.length === 0 && this.interaction_craft.length === 0 && this.interaction_generate.length === 0) {\n\t\t\treport.push([\"warning\", \"Interaction is missing a aquisition interaction.\"]);\n\t\t}\n\n\t\tfor (let i = 0; i < this.interaction_buy.length; i++) {\n\t\t\treport = [...report, ...this.interaction_buy[i].validate()];\n\t\t}\n\t\tfor (let i = 0; i < this.interaction_sell.length; i++) {\n\t\t\treport = [...report, ...this.interaction_sell[i].validate()];\n\t\t}\n\t\tfor (let i = 0; i < this.interaction_craft.length; i++) {\n\t\t\treport = [...report, ...this.interaction_craft[i].validate()];\n\t\t}\n\t\tfor (let i = 0; i < this.interaction_generate.length; i++) {\n\t\t\treport = [...report, ...this.interaction_generate[i].validate()];\n\t\t}\n\n\t\treturn report;\n\t}\n}\nexport class parcel_structure extends parcel {\n\tpublic type: \"structure\" = \"structure\";\n\tpublic owned: number = 0;\n\tpublic interactions: interaction_name[] = [\"interaction_buy\", \"interaction_sell\", \"interaction_craft\", \"interaction_generate\"];\n\n\tpublic interaction_buy: interaction[] = [];\n\tpublic interaction_sell: interaction[] = [];\n\tpublic interaction_craft: interaction[] = [];\n\tpublic interaction_generate: interaction[] = [];\n\tpublic interaction_requirement: charge[];\n\n\tconstructor(public id: string, public name: string) {\n\t\tsuper(id, \"structure\", name);\n\t}\n\tvalidate_self(): validation_report[] {\n\t\tlet report: validation_report[] = [];\n\t\treport.push(validate_not_negative(this.owned, \"Owned\"));\n\n\t\treturn report;\n\t}\n}\n\nexport class parcel_research extends parcel {\n\tpublic type: \"research\" = \"research\";\n\tpublic interactions: interaction_name[] = [\"interaction_craft\"];\n\n\tpublic interaction_craft: interaction[] = [];\n\tconstructor(public id: string, public name: string) {\n\t\tsuper(id, \"research\", name);\n\t}\n\n\tvalidate_self(): validation_report[] {\n\t\tif (this.interaction_craft.length === 0) {\n\t\t\treturn [[\"warning\", \"Interaction is missing a craft interaction.\"]];\n\t\t}\n\t\treturn [];\n\t}\n}\n\nexport class parcel_unique extends parcel {\n\tpublic type: \"unique\" = \"unique\";\n\tpublic owned: number = 0;\n\n\tconstructor(public id: string, public name: string) {\n\t\tsuper(id, \"unique\", name);\n\t}\n\n\tvalidate_self(): validation_report[] {\n\t\treturn [];\n\t}\n}\n\nfunction validate_not_negative(property: number, property_name: string): validation_report {\n\tif (property < 0) {\n\t\treturn [\"invalid\", `${property_name} is negative or undefined.`];\n\t}\n\treturn [\"valid\", `${property_name} is equal to or greater than zero.`];\n}\n","import { validation_report, validation_result } from \"./type\";\n\nfunction id_to_name(id: string) {\n\tlet name = id.replaceAll(\"_\", \" \");\n\tname = capitalise_all_words(name);\n\treturn name;\n}\nfunction capitalise_all_words(source: string): string {\n\treturn source.replace(/\\w\\S*/g, function (txt) {\n\t\treturn txt.charAt(0).toUpperCase() + txt.substring(1).toLowerCase();\n\t});\n}\nfunction capitalise_first_word(source: string): string {\n\treturn source.charAt(0).toUpperCase() + source.slice(1);\n}\nfunction removeSymbols(source: string): string {\n\t// Replace underscores _ and dashes with spaces\n\t// replace all other characters with blank\n\treturn source.replaceAll(\"_\", \" \").replaceAll(\"-\", \" \").replaceAll(/[^a-zA-Z0-9\\s]/g, \"\");\n\t\n}\n\nfunction validity_check(reports: validation_report[]): validation_result {\n\tlet state: validation_result = \"valid\";\n\tfor (const i in reports) {\n\t\tconst report_state = reports[i][0];\n\t\tif (report_state == \"valid\") {\n\t\t\tcontinue;\n\t\t} else if (report_state == \"invalid\") {\n\t\t\tstate = \"invalid\";\n\t\t} else if (report_state == \"warning\") {\n\t\t\treturn \"warning\";\n\t\t}\n\t}\n\treturn state;\n}\n\nexport default { id_to_name, capitalise_all_words, capitalise_first_word, validity_check, removeSymbols };\n"],"names":["$46210b831001efd1$export$92473e6020ad89b4","validate","report","result","length","push","require","consume","validateProperty","property","validIds","validateSubproperties","i","includes","constructor","unlocked","$46210b831001efd1$export$5c821c4fb743fae8","count","effect_add","effect_multiply","$61ac6999b06bcc6b$export$953fd2ca369933c7","RegExp","$61ac6999b06bcc6b$export$4820a57701200e97","$61ac6999b06bcc6b$export$8061f4f56cedd9bb","$732d296f0054a2bc$var$parcel","id","type","name","interactions","validate_parcel","test","validate_self","validate_interaction","target","console","log","$732d296f0054a2bc$export$e9d70138bf24ca18","owned","interaction_buy","interaction_sell","interaction_craft","interaction_generate","$732d296f0054a2bc$var$validate_not_negative","$732d296f0054a2bc$export$939564c233e4e371","$732d296f0054a2bc$export$f1a40d7dd1596669","$732d296f0054a2bc$export$2ab3c62fbe8d8bb","property_name","$7c97e1adeaf198e6$var$capitalise_all_words","source","replace","txt","charAt","toUpperCase","substring","toLowerCase","$7c97e1adeaf198e6$export$2e2bcd8739ae039","id_to_name","replaceAll","capitalise_all_words","capitalise_first_word","slice","validity_check","reports","state","report_state","removeSymbols","$cccf7d3b46d90071$var$DOM_PARCEL_LIST","document","getElementById","$cccf7d3b46d90071$var$DOM_PARCEL_EDIT","$cccf7d3b46d90071$var$DOM_INTERACTION_LIST","$cccf7d3b46d90071$var$DOM_INTERACTION_EDIT","$cccf7d3b46d90071$var$DOM_INTERACTION_SET","$cccf7d3b46d90071$var$DOM_PARCEL_ADD_TYPE","$cccf7d3b46d90071$var$DOM_PARCEL_ADD_ID","$cccf7d3b46d90071$var$DOM_PARCEL_ADD_BUTTON","$cccf7d3b46d90071$var$checkParcelAddIDEmpty","value","classList","add","remove","addEventListener","$46f5046414263a3c$var$editor","default_start","version","stored_parcel","logVersion","checkStorage","clear","renderEditor","warn","new_parcel","refreshList","save","parcel","localStorage","setItem","JSON","stringify","error","load","full_id","data","getItem","parsed_data","parse","interaction_requirement","interaction_types","j","new_interaction","info","new_type","delete","removeItem","key","valid_id","sort","a","b","localeCompare","table","renderList","clearDOM","innerHTML","lastParcelType","split","h3","createElement","appendChild","button","undefined","id_input","placeholder","pattern","name_input","owned_input","toString","min","Number","checkbox_wrapper","unlocked_checkbox","checkbox_label","checked","Boolean","buy_button","renderInteractionList","sell_button","craft_button","generate_button","charge_button","renderChargeList","save_button","delete_button","confirm","interaction_type","interaction_name","renderInteraction","parseInt","newInteraction","String","renderCharge","interaction_id","checkbox","result_button","renderSet","require_button","consume_button","charge_id","set_type","select","option","text","firstOption","wrapper","new_select","cloneNode","number_input","splice","newSetButton","globalThis","editor","quintessence","ironOre","ironOreInteraction"],"version":3,"file":"index.3477d732.js.map"}